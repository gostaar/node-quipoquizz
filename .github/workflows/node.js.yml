# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  connect-mongodb-atlas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up MongoDB Atlas connextion
        run: |
          # Récupérez la chaine de connexion MongoDB Atlas depuis les secrets MONGODB_ATLAS_URI=$MONGODB_ATLAS_URI

          # Votre logique de connexion à MongoDB Atlas ici
          # Par exemple, vous pouvez utiliser l'interface de ligne de commande MongoDB (mongosh) ou un script Node.js
  
          # Exemple avec mongosh
          # mongosh "$MONGODB8ATLAS8ARI" --eval "printjson(db.adminCommand('listDatabases'))"
        env: 
          MONGODB_ATLAS_URI: ${{secrets.MONGODB_ATLAS_URI }}
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install mongoose
    - run: npm i express
    - run: npm start
    - run: npm run build --if-present
    - run: npm test
